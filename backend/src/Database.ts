//Source code generated by AppGPT (www.appgpt.tech)

//Class to create tables and seed new database
import { DataSource } from 'typeorm';
import { DBConfiguration } from './Configuration';
import { SettingsEntity } from './db/Settings.entity';
//autogenerate imports based on resources
import { UsersEntity } from './db/Users.entity';
import { EmployeesEntity } from './db/Employees.entity';
import { EvaluationsEntity } from './db/Evaluations.entity';
import { PayrollEntity } from './db/Payroll.entity';
import { LeaveRequestsEntity } from './db/LeaveRequests.entity';

export class Database {
  static dbConfiguration: DBConfiguration;
  public static ds: DataSource;

  static async Initialize(dbConfiguration: DBConfiguration) {
    Database.dbConfiguration = dbConfiguration;
    let dbConfig: any = dbConfiguration as any;
    //Autogenerate entities array from resource names

    dbConfig.entities = [
      SettingsEntity,
      UsersEntity,
      EmployeesEntity,
      EvaluationsEntity,
      PayrollEntity,
      LeaveRequestsEntity,
    ];
    Database.ds = new DataSource(dbConfig);
    await Database.ds.initialize();

    //TODO: Drop all tables

    await Database.Seed();
  }
  static async Seed() {
    let data: any = {
      Users: [
        {
          userId: 1,
          name: 'name 1',
          email: 'email 1',
          password: 'password 1',
          role: 'role 1',
          id: 62,
        },
        {
          userId: 2,
          name: 'name 2',
          email: 'email 2',
          password: 'password 2',
          role: 'role 2',
          id: 24,
        },
        {
          userId: 3,
          name: 'name 3',
          email: 'email 3',
          password: 'password 3',
          role: 'role 3',
          id: 96,
        },
        {
          userId: 4,
          name: 'name 4',
          email: 'email 4',
          password: 'password 4',
          role: 'role 4',
          id: 76,
        },
        {
          userId: 5,
          name: 'name 5',
          email: 'email 5',
          password: 'password 5',
          role: 'role 5',
          id: 59,
        },
      ],
      Employees: [
        {
          employeeId: 1,
          firstName: 'firstName 1',
          lastName: 'lastName 1',
          middleName: 'middleName 1',
          dateOfBirth: '2023-07-30T22:34:02.095Z',
          gender: 'gender 1',
          nationality: 'nationality 1',
          maritalStatus: 'maritalStatus 1',
          contactInformation: 'contactInformation 1',
          address: 'address 1',
          department: 'department 1',
          position: 'position 1',
          manager: 'manager 1',
          employmentType: 'employmentType 1',
          startDate: '2023-11-03T06:33:59.020Z',
          endDate: '2023-07-06T02:52:33.213Z',
          salaryInformation: 0.69,
          profilePicture: 'profilePicture 1',
          id: 0,
        },
        {
          employeeId: 2,
          firstName: 'firstName 2',
          lastName: 'lastName 2',
          middleName: 'middleName 2',
          dateOfBirth: '2024-10-04T19:51:59.175Z',
          gender: 'gender 2',
          nationality: 'nationality 2',
          maritalStatus: 'maritalStatus 2',
          contactInformation: 'contactInformation 2',
          address: 'address 2',
          department: 'department 2',
          position: 'position 2',
          manager: 'manager 2',
          employmentType: 'employmentType 2',
          startDate: '2023-12-10T17:27:57.031Z',
          endDate: '2023-07-17T01:40:37.245Z',
          salaryInformation: 0.15,
          profilePicture: 'profilePicture 2',
          id: 88,
        },
        {
          employeeId: 3,
          firstName: 'firstName 3',
          lastName: 'lastName 3',
          middleName: 'middleName 3',
          dateOfBirth: '2024-01-16T22:31:09.392Z',
          gender: 'gender 3',
          nationality: 'nationality 3',
          maritalStatus: 'maritalStatus 3',
          contactInformation: 'contactInformation 3',
          address: 'address 3',
          department: 'department 3',
          position: 'position 3',
          manager: 'manager 3',
          employmentType: 'employmentType 3',
          startDate: '2024-07-27T08:16:40.661Z',
          endDate: '2024-07-10T06:43:56.028Z',
          salaryInformation: 0.71,
          profilePicture: 'profilePicture 3',
          id: 74,
        },
        {
          employeeId: 4,
          firstName: 'firstName 4',
          lastName: 'lastName 4',
          middleName: 'middleName 4',
          dateOfBirth: '2024-01-14T21:17:14.328Z',
          gender: 'gender 4',
          nationality: 'nationality 4',
          maritalStatus: 'maritalStatus 4',
          contactInformation: 'contactInformation 4',
          address: 'address 4',
          department: 'department 4',
          position: 'position 4',
          manager: 'manager 4',
          employmentType: 'employmentType 4',
          startDate: '2024-05-26T09:24:48.320Z',
          endDate: '2024-10-24T20:42:18.315Z',
          salaryInformation: 0.98,
          profilePicture: 'profilePicture 4',
          id: 64,
        },
        {
          employeeId: 5,
          firstName: 'firstName 5',
          lastName: 'lastName 5',
          middleName: 'middleName 5',
          dateOfBirth: '2024-06-10T14:49:56.063Z',
          gender: 'gender 5',
          nationality: 'nationality 5',
          maritalStatus: 'maritalStatus 5',
          contactInformation: 'contactInformation 5',
          address: 'address 5',
          department: 'department 5',
          position: 'position 5',
          manager: 'manager 5',
          employmentType: 'employmentType 5',
          startDate: '2023-06-12T12:45:31.984Z',
          endDate: '2024-06-29T11:40:27.905Z',
          salaryInformation: 0.79,
          profilePicture: 'profilePicture 5',
          id: 42,
        },
      ],
      Evaluations: [
        {
          reviewId: 1,
          employeeId: 1,
          periodStart: '2024-09-07T14:25:58.465Z',
          periodEnd: '2024-07-10T03:21:47.682Z',
          goalsObjectives: 'goalsObjectives 1',
          achievements: 'achievements 1',
          improvementAreas: 'improvementAreas 1',
          feedbackFromSupervisor: 'feedbackFromSupervisor 1',
          overallRating: 1,
          recommendations: 'recommendations 1',
          id: 64,
        },
        {
          reviewId: 2,
          employeeId: 2,
          periodStart: '2025-02-09T07:34:41.430Z',
          periodEnd: '2025-03-21T15:21:50.491Z',
          goalsObjectives: 'goalsObjectives 2',
          achievements: 'achievements 2',
          improvementAreas: 'improvementAreas 2',
          feedbackFromSupervisor: 'feedbackFromSupervisor 2',
          overallRating: 2,
          recommendations: 'recommendations 2',
          id: 24,
        },
        {
          reviewId: 3,
          employeeId: 3,
          periodStart: '2024-05-15T21:21:38.748Z',
          periodEnd: '2023-05-27T13:53:40.043Z',
          goalsObjectives: 'goalsObjectives 3',
          achievements: 'achievements 3',
          improvementAreas: 'improvementAreas 3',
          feedbackFromSupervisor: 'feedbackFromSupervisor 3',
          overallRating: 3,
          recommendations: 'recommendations 3',
          id: 100,
        },
        {
          reviewId: 4,
          employeeId: 4,
          periodStart: '2023-11-18T15:46:52.256Z',
          periodEnd: '2024-01-27T04:51:08.582Z',
          goalsObjectives: 'goalsObjectives 4',
          achievements: 'achievements 4',
          improvementAreas: 'improvementAreas 4',
          feedbackFromSupervisor: 'feedbackFromSupervisor 4',
          overallRating: 4,
          recommendations: 'recommendations 4',
          id: 1,
        },
        {
          reviewId: 5,
          employeeId: 5,
          periodStart: '2024-05-06T22:00:47.168Z',
          periodEnd: '2024-05-22T21:53:30.705Z',
          goalsObjectives: 'goalsObjectives 5',
          achievements: 'achievements 5',
          improvementAreas: 'improvementAreas 5',
          feedbackFromSupervisor: 'feedbackFromSupervisor 5',
          overallRating: 5,
          recommendations: 'recommendations 5',
          id: 32,
        },
      ],
      Payroll: [
        {
          payrollId: 1,
          employeeId: 1,
          periodStartDate: '2025-02-24T18:39:37.929Z',
          periodEndDate: '2024-05-10T19:52:32.819Z',
          grossSalary: 0.63,
          deductions: 0.5,
          netSalary: 0.59,
          payDate: '2025-02-24T18:51:27.997Z',
          overtimeHours: 1,
          overtimePay: 0.6,
          id: 32,
        },
        {
          payrollId: 2,
          employeeId: 2,
          periodStartDate: '2024-07-08T12:16:03.462Z',
          periodEndDate: '2024-11-26T07:56:53.034Z',
          grossSalary: 0.46,
          deductions: 0.86,
          netSalary: 0.6,
          payDate: '2024-05-10T17:10:40.171Z',
          overtimeHours: 2,
          overtimePay: 0.47,
          id: 56,
        },
        {
          payrollId: 3,
          employeeId: 3,
          periodStartDate: '2023-12-22T10:41:08.801Z',
          periodEndDate: '2024-07-01T21:45:23.589Z',
          grossSalary: 0.59,
          deductions: 0.1,
          netSalary: 0.12,
          payDate: '2024-05-05T18:10:32.677Z',
          overtimeHours: 3,
          overtimePay: 0.72,
          id: 95,
        },
        {
          payrollId: 4,
          employeeId: 4,
          periodStartDate: '2024-01-22T12:02:34.133Z',
          periodEndDate: '2024-05-31T05:48:41.863Z',
          grossSalary: 0.88,
          deductions: 0.37,
          netSalary: 0.94,
          payDate: '2023-08-23T20:47:20.330Z',
          overtimeHours: 4,
          overtimePay: 0.54,
          id: 61,
        },
        {
          payrollId: 5,
          employeeId: 5,
          periodStartDate: '2023-08-04T02:01:32.451Z',
          periodEndDate: '2024-08-26T07:41:39.939Z',
          grossSalary: 0.4,
          deductions: 1,
          netSalary: 0.21,
          payDate: '2023-08-30T18:41:03.087Z',
          overtimeHours: 5,
          overtimePay: 0.71,
          id: 26,
        },
      ],
      LeaveRequests: [
        {
          requestId: 1,
          employeeId: 1,
          typeOfLeave: 'typeOfLeave 1',
          startDate: '2024-08-16T19:52:15.260Z',
          endDate: '2025-03-10T22:35:12.056Z',
          reason: 'reason 1',
          approvalStatus: 'approvalStatus 1',
          approverUserId: 1,
          id: 8,
        },
        {
          requestId: 2,
          employeeId: 2,
          typeOfLeave: 'typeOfLeave 2',
          startDate: '2024-03-23T22:52:14.637Z',
          endDate: '2024-10-27T12:55:59.839Z',
          reason: 'reason 2',
          approvalStatus: 'approvalStatus 2',
          approverUserId: 2,
          id: 53,
        },
        {
          requestId: 3,
          employeeId: 3,
          typeOfLeave: 'typeOfLeave 3',
          startDate: '2025-01-02T08:51:31.434Z',
          endDate: '2025-02-25T18:31:37.802Z',
          reason: 'reason 3',
          approvalStatus: 'approvalStatus 3',
          approverUserId: 3,
          id: 51,
        },
        {
          requestId: 4,
          employeeId: 4,
          typeOfLeave: 'typeOfLeave 4',
          startDate: '2023-05-23T03:40:35.913Z',
          endDate: '2025-03-12T18:23:31.804Z',
          reason: 'reason 4',
          approvalStatus: 'approvalStatus 4',
          approverUserId: 4,
          id: 52,
        },
        {
          requestId: 5,
          employeeId: 5,
          typeOfLeave: 'typeOfLeave 5',
          startDate: '2024-12-05T08:18:25.255Z',
          endDate: '2023-06-09T11:38:10.786Z',
          reason: 'reason 5',
          approvalStatus: 'approvalStatus 5',
          approverUserId: 5,
          id: 74,
        },
      ],
    };
    //Autogenerate multiple such calls ie for each resource and its data object
    let isSeeded = await this.IsSeeded();
    //if (!isSeeded) {
    //forcing app recreation
    if (true) {
      console.log('   Seeding database...');
      await this.SeedResource('UsersEntity', data.Users);
      await this.SeedResource('EmployeesEntity', data.Employees);
      await this.SeedResource('EvaluationsEntity', data.Evaluations);
      await this.SeedResource('PayrollEntity', data.Payroll);
      await this.SeedResource('LeaveRequestsEntity', data.LeaveRequests);
      await this.SeedResource('SettingsEntity', {
        settingname: 'isSeeded',
        settingvalue: 'true',
      });
    } else {
      console.log('   Database seeded already!');
    }
  }
  static async IsSeeded() {
    const repo = Database.ds.getRepository('SettingsEntity');
    let rec: any = await repo.findOne({
      select: {
        settingname: true,
        settingvalue: true,
      },
      where: {
        settingname: 'isSeeded',
      },
    });
    if (rec && rec.settingvalue) return true;
    return false;
  }
  static async SeedResource(resourceName: any, resourceData: any) {
    const repo = Database.ds.getRepository(resourceName);
    //await repo.clear();
    console.log('   Seeding table ' + resourceName);
    await repo.upsert(resourceData, ['id']);
  }
}
